- hosts: localhost # Target all hosts in your inventory
  tasks:
    - name: Create project
      redhat.openshift.k8s:
        state: present
        definition:
          apiVersion: project.openshift.io/v1
          kind: Project
          metadata:
            name: workloads

    - name: Define and create the VirtualMachine
      redhat.openshift_virtualization.kubevirt_vm:
        state: present
        name: rhel-image-builder
        namespace: workloads

        # Corresponds to top-level VM metadata.labels
        labels:
          app: rhel-image-builder
          kubevirt.io/dynamic-credentials-support: "true" # Ensures guest agent communication if agent is in the image
          vm.kubevirt.io/template: rhel9-server-small
          vm.kubevirt.io/template.namespace: openshift
          vm.kubevirt.io/template.revision: "1"
          vm.kubevirt.io/template.version: v0.32.2

        data_volume_templates:
          - metadata: # Metadata for the DataVolume object
              name: rhel-image-builder # Name of the DataVolume to be created
            spec:
              sourceRef:
                kind: DataSource
                name: rhel9 # Name of the DataSource (e.g., OS image)
                namespace: openshift-virtualization-os-images # Namespace of the DataSource
              storage:
                resources:
                  requests:
                    storage: 30Gi # Size of the DataVolume
        spec: # Spec for the VirtualMachineInstance template
          domain: # KubeVirt domain spec (defines the virtual hardware)
            cpu:
              cores: 4
              sockets: 1
              threads: 2
            memory:
              guest: 4Gi # Guest memory
            devices:
              interfaces:
                - name: default
                  model: virtio
                  masquerade: {} # Use default pod networking with masquerade
                  # macAddress: '02:c6:ad:00:00:0b' # Omit for a new MAC from kubemacpool or KubeVirt default.
                  # Include if you need this specific MAC and are sure it won't conflict.
              disks:
                - name: rootdisk # Name of the disk device
                  disk: # Defines disk properties
                    bus: virtio # Bus type
                - name: cloudinitdisk
                  disk:
                    bus: virtio
            features:
              acpi: {} # Enable ACPI features
              smm:
                enabled: true # Enable System Management Mode
            firmware:
              bootloader: # KubeVirt v1.0+ bootloader structure
                efi: {} # Enable UEFI boot
          networks: # Define virtual machine networks
            - name: default # Name of the network
              pod: {} # Connect to the default pod network
          volumes: # Define volumes available to the VM
            - name: rootdisk # Name of the volume
              dataVolume: # Link this volume to a DataVolume
                name: rhel-image-builder # Must match the name in dataVolumeTemplates.metadata.name
            - name: cloudinitdisk
              cloudInitNoCloud: # Provide cloud-init configuration
                userData: |-
                  #cloud-config
                  user: ansible
                  password: redhat
                  ssh_pwauth: True
                  chpasswd:
                    expire: False
                  sudo: "ALL=(ALL) NOPASSWD:ALL"
                  ssh_authorized_keys:
                    - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINif3sibj7bJ/ovG385ebuOXYjwNSlFrxZJaOTt8qUuz jveverka@Unknown.lan

    - name: Wait for virtual machine IP to be populated
      kubernetes.core.k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachineInstance
        name: rhel-image-builder
        namespace: workloads
      register: vmi
      retries: 60
      delay: 10
      until: (vmi.resources[0].status.interfaces[0]['ipAddress'] | default('')) | length > 0
